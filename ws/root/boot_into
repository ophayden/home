#!/bin/bash

usage() {
  echo 'boot [-hasl] [<boot option>]'
  echo '  List or boot into other grub boot options'
  echo
  echo 'OPTS'
  echo '  No options will prompt for what OS to boot into once'
  echo '  -h    Display this help screen'
  echo '  -a    Include sub menus as boot options'
  echo '  -s    Set the new OS default'
  echo '  -l    List boot options'
}

all=no
save=no
list=no

while getopts ":hasl" arg; do
  case $arg in
    a) # all
      all=yes
      ;;
    s) # save
      save=yes
      ;;
    l) # list
      list=yes
      ;;
    h) # Display help.
      usage
      exit 0
      ;;
    *) # Error option
      echo "Error: bad option: $arg"
      usage
      exit 1
  esac
done
shift $(($OPTIND - 1))
if [ $# -gt 1 ]; then
  echo "Error: too many args: $2"
  usage
  exit 1
fi
sel="$1"

once=no
if [ $save == no ] && [ $list == no ]; then
  once=yes
elif [ $save == yes ] && [ $list == yes ]; then
  echo "You can't set a new default and list choices"
  exit 1
fi

# load entries
grub_cfg=/efi/grub/grub.cfg
IFS=$'\n' menuentries=($(cat $grub_cfg | grep -oE "^\s*menuentry\ '[^']+'"))
if [ "${#menuentries[@]}" -eq 0 ]; then
  echo "Error: No menu entries found in grub file: $grub_cfg"
  echo "Are you root?"
  exit 1
fi
entries=()
for entry in "${menuentries[@]}"; do
  name="$(echo "$entry" | cut -d\' -f2)"
  if [ "$save" == yes ] && [ "$name" == 'UEFI Firmware Settings' ]; then
    continue
  fi
  if [ "${entry:0:9}" == menuentry ]; then
    root="$name"
    entries+=("$root")
  elif [ $all == yes ]; then
    entries+=("$root>$name")
  fi
done

# if list, then list and exit
if [ $list == yes ]; then
  for entry in "${entries[@]}"; do
    echo "'$entry'"
  done
  exit 0
fi

check_sel() {
  for entry in "${entries[@]}"; do
    if [ "$1" == "$entry" ]; then
      return 0
    fi
  done
  echo "Entry not found: $1"
  return 1
}

# get and check selection
while [ "$sel" == '' ] || ! check_sel "$sel"; do
  if [ $save == yes ]; then
    echo "Select the new DEFAULT OS"
  else
    echo "Select OS to boot once into"
  fi
  select entry in "${entries[@]}"; do
    sel="$entry"
    echo Selected "'$entry'"
    break
  done
done

# reboot
set -e
if [ $save == yes ]; then
  echo "Setting default to '$sel'"
  grub-set-default --boot-directory=/efi "$sel"
else
  echo "Booting into '$sel'"
  grub-reboot --boot-directory=/efi "$sel"
  reboot
fi

